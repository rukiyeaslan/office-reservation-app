{"ast":null,"code":"\"use strict\";\n\n(function () {\n  var root = this;\n  var previousRomaji = root.romaji;\n  var romaji;\n  if (typeof exports !== 'undefined') {\n    romaji = exports;\n  } else {\n    romaji = root.romaji = {};\n  }\n  romaji.version = '0.2.1';\n  romaji.mode = 'hepburn';\n\n  //helper functions\n\n  var swapJsonKeyValues = function (input) {\n    var one,\n      output = {};\n    for (one in input) {\n      if (input.hasOwnProperty(one)) {\n        output[input[one]] = one;\n      }\n    }\n    return output;\n  };\n  var replaceAll = function (find, replace, str) {\n    return str.replace(new RegExp(find, 'g'), replace);\n  };\n\n  //maps\n  var toKanaMap = {};\n  toKanaMap.hiragana = {\n    //Digraphs\n\n    \"きゃ\": \"kya\",\n    \"しゃ\": \"sha\",\n    \"ちゃ\": \"cha\",\n    \"にゃ\": \"nya\",\n    \"ひゃ\": \"hya\",\n    \"みゃ\": \"mya\",\n    \"りゃ\": \"rya\",\n    \"ぎゃ\": \"gya\",\n    \"ふゅ\": \"fyu\",\n    \"びゃ\": \"bya\",\n    \"ぴゃ\": \"pya\",\n    \"きゅ\": \"kyu\",\n    \"しゅ\": \"shu\",\n    \"ちゅ\": \"chu\",\n    \"にゅ\": \"nyu\",\n    \"ひゅ\": \"hyu\",\n    \"みゅ\": \"myu\",\n    \"りゅ\": \"ryu\",\n    \"ぎゅ\": \"gyu\",\n    \"びゅ\": \"byu\",\n    \"ぴゅ\": \"pyu\",\n    \"きょ\": \"kyo\",\n    \"しょ\": \"sho\",\n    \"ちょ\": \"cho\",\n    \"にょ\": \"nyo\",\n    \"ひょ\": \"hyo\",\n    \"みょ\": \"myo\",\n    \"りょ\": \"ryo\",\n    \"ぎょ\": \"gyo\",\n    \"びょ\": \"byo\",\n    \"ぴょ\": \"pyo\",\n    \"つぁ\": \"tsa\",\n    \"つぃ\": \"tsi\",\n    \"つぇ\": \"tse\",\n    \"つぉ\": \"tso\",\n    \"ちぇ\": \"che\",\n    \"しぇ\": \"she\",\n    \"じゃ\": \"ja\",\n    \"じゅ\": \"ju\",\n    \"じょ\": \"jo\",\n    \"ふぁ\": \"fa\",\n    \"ふぃ\": \"fi\",\n    \"ふぇ\": \"fe\",\n    \"ふぉ\": \"fo\",\n    \"うぃ\": \"wi\",\n    // obsoleted kana\n    \"ゑ\": \"we\",\n    \"うぇ\": \"we\",\n    \"うぉ\": \"wo\",\n    \"ゔぁ\": \"va\",\n    \"ゔぃ\": \"vi\",\n    \"ゔぇ\": \"ve\",\n    \"ゔぉ\": \"vo\",\n    \"じぇ\": \"je\",\n    \"てぃ\": \"ti\",\n    \"でぃ\": \"di\",\n    \"でゅ\": \"du\",\n    \"とぅ\": \"tu\",\n    //Monographs\n\n    \"し\": \"shi\",\n    \"ち\": \"chi\",\n    \"つ\": \"tsu\",\n    \"か\": \"ka\",\n    \"さ\": \"sa\",\n    \"た\": \"ta\",\n    \"な\": \"na\",\n    \"は\": \"ha\",\n    \"ま\": \"ma\",\n    \"ら\": \"ra\",\n    \"き\": \"ki\",\n    \"に\": \"ni\",\n    \"ひ\": \"hi\",\n    \"み\": \"mi\",\n    \"り\": \"ri\",\n    \"く\": \"ku\",\n    \"す\": \"su\",\n    \"ぬ\": \"nu\",\n    \"ふ\": \"fu\",\n    \"む\": \"mu\",\n    \"る\": \"ru\",\n    \"け\": \"ke\",\n    \"せ\": \"se\",\n    \"て\": \"te\",\n    \"ね\": \"ne\",\n    \"へ\": \"he\",\n    \"め\": \"me\",\n    \"れ\": \"re\",\n    \"こ\": \"ko\",\n    \"そ\": \"so\",\n    \"と\": \"to\",\n    \"の\": \"no\",\n    \"ほ\": \"ho\",\n    \"も\": \"mo\",\n    \"ろ\": \"ro\",\n    \"わ\": \"wa\",\n    \"を\": \"wo\",\n    \"が\": \"ga\",\n    \"ざ\": \"za\",\n    \"だ\": \"da\",\n    \"ば\": \"ba\",\n    \"ぱ\": \"pa\",\n    \"ぎ\": \"gi\",\n    \"ぢ\": \"ji\",\n    //じ is more common to use, so it goes secondly\n    // when we build toHiraganaMap, this will get overwriiten by second one\n\n    \"じ\": \"ji\",\n    \"び\": \"bi\",\n    \"ぴ\": \"pi\",\n    \"ぐ\": \"gu\",\n    \"ず\": \"zu\",\n    \"づ\": \"zu\",\n    \"ぶ\": \"bu\",\n    \"ぷ\": \"pu\",\n    \"げ\": \"ge\",\n    \"ぜ\": \"ze\",\n    \"で\": \"de\",\n    \"べ\": \"be\",\n    \"ぺ\": \"pe\",\n    \"ご\": \"go\",\n    \"ぞ\": \"zo\",\n    \"ど\": \"do\",\n    \"ぼ\": \"bo\",\n    \"ぽ\": \"po\",\n    \"や\": \"ya\",\n    \"ゆ\": \"yu\",\n    \"よ\": \"yo\",\n    \"あ\": \"a\",\n    \"い\": \"i\",\n    \"う\": \"u\",\n    \"え\": \"e\",\n    \"お\": \"o\",\n    \"ん\": \"n\"\n  };\n  toKanaMap.katakana = {\n    \"キャ\": \"kya\",\n    \"シャ\": \"sha\",\n    \"チャ\": \"cha\",\n    \"ニャ\": \"nya\",\n    \"ヒャ\": \"hya\",\n    \"ミャ\": \"mya\",\n    \"リャ\": \"rya\",\n    \"ギャ\": \"gya\",\n    \"ビャ\": \"bya\",\n    \"ピャ\": \"pya\",\n    \"キュ\": \"kyu\",\n    \"シュ\": \"shu\",\n    \"チュ\": \"chu\",\n    \"ニュ\": \"nyu\",\n    \"ヒュ\": \"hyu\",\n    \"ミュ\": \"myu\",\n    \"リュ\": \"ryu\",\n    \"ギュ\": \"gyu\",\n    \"ビュ\": \"byu\",\n    \"ピュ\": \"pyu\",\n    \"キョ\": \"kyo\",\n    \"ショ\": \"sho\",\n    \"チョ\": \"cho\",\n    \"ニョ\": \"nyo\",\n    \"ヒョ\": \"hyo\",\n    \"ミョ\": \"myo\",\n    \"リョ\": \"ryo\",\n    \"ギョ\": \"gyo\",\n    \"ビョ\": \"byo\",\n    \"ピョ\": \"pyo\",\n    \"フュ\": \"fyu\",\n    \"ツァ\": \"tsa\",\n    \"ツィ\": \"tsi\",\n    \"ツェ\": \"tse\",\n    \"ツォ\": \"tso\",\n    \"チェ\": \"che\",\n    \"シェ\": \"she\",\n    \"シ\": \"shi\",\n    \"チ\": \"chi\",\n    \"ツ\": \"tsu\",\n    \"ジョ\": \"jo\",\n    \"ジャ\": \"ja\",\n    \"ジュ\": \"ju\",\n    \"ファ\": \"fa\",\n    \"フィ\": \"fi\",\n    \"フェ\": \"fe\",\n    \"フォ\": \"fo\",\n    \"ウィ\": \"wi\",\n    \"ウェ\": \"we\",\n    \"ウォ\": \"wo\",\n    \"ヴァ\": \"va\",\n    \"ヴィ\": \"vi\",\n    \"ヴェ\": \"ve\",\n    \"ヴォ\": \"vo\",\n    \"ジェ\": \"je\",\n    \"ティ\": \"ti\",\n    \"ディ\": \"di\",\n    \"デュ\": \"du\",\n    \"トゥ\": \"tu\",\n    //basic\n\n    \"カ\": \"ka\",\n    \"サ\": \"sa\",\n    \"タ\": \"ta\",\n    \"ナ\": \"na\",\n    \"ハ\": \"ha\",\n    \"マ\": \"ma\",\n    \"ラ\": \"ra\",\n    \"キ\": \"ki\",\n    \"ニ\": \"ni\",\n    \"ヒ\": \"hi\",\n    \"ミ\": \"mi\",\n    \"リ\": \"ri\",\n    \"ク\": \"ku\",\n    \"ス\": \"su\",\n    \"ヌ\": \"nu\",\n    \"フ\": \"fu\",\n    \"ム\": \"mu\",\n    \"ル\": \"ru\",\n    \"ケ\": \"ke\",\n    \"セ\": \"se\",\n    \"テ\": \"te\",\n    \"ネ\": \"ne\",\n    \"ヘ\": \"he\",\n    \"メ\": \"me\",\n    \"レ\": \"re\",\n    \"コ\": \"ko\",\n    \"ソ\": \"so\",\n    \"ト\": \"to\",\n    \"ノ\": \"no\",\n    \"ホ\": \"ho\",\n    \"モ\": \"mo\",\n    \"ロ\": \"ro\",\n    \"ワ\": \"wa\",\n    \"ヲ\": \"wo\",\n    \"ガ\": \"ga\",\n    \"ザ\": \"za\",\n    \"ダ\": \"da\",\n    \"バ\": \"ba\",\n    \"パ\": \"pa\",\n    \"ギ\": \"gi\",\n    \"ジ\": \"ji\",\n    \"ヂ\": \"ji\",\n    \"ビ\": \"bi\",\n    \"ピ\": \"pi\",\n    \"グ\": \"gu\",\n    \"ズ\": \"zu\",\n    \"ヅ\": \"zu\",\n    \"ブ\": \"bu\",\n    \"プ\": \"pu\",\n    \"ゲ\": \"ge\",\n    \"ぜ\": \"ze\",\n    \"デ\": \"de\",\n    \"ベ\": \"be\",\n    \"ペ\": \"pe\",\n    \"ゴ\": \"go\",\n    \"ゾ\": \"zo\",\n    \"ド\": \"do\",\n    \"ボ\": \"bo\",\n    \"ポ\": \"po\",\n    \"ャ\": \"ya\",\n    \"ヤ\": \"ya\",\n    \"ュ\": \"yu\",\n    \"ユ\": \"yu\",\n    \"ョ\": \"yo\",\n    \"ヨ\": \"yo\",\n    \"ン\": \"n\",\n    \"ア\": \"a\",\n    \"イ\": \"i\",\n    \"ウ\": \"u\",\n    \"エ\": \"e\",\n    \"オ\": \"o\",\n    // obsoleted kana\n\n    \"ヱ\": \"we\",\n    \"ヹ\": \"ve\"\n  };\n  var longVowelsMap = {\n    'a': 'ā',\n    'e': 'ē',\n    'i': 'ī',\n    'o': 'ō',\n    'u': 'ū'\n  };\n\n  //rebuild map by switching key and value\n  var toHiraganaMap = swapJsonKeyValues(toKanaMap.hiragana);\n  var toKatakanaMap = swapJsonKeyValues(toKanaMap.katakana);\n  var revLongVowelsMap = swapJsonKeyValues(longVowelsMap);\n  romaji.noConflict = function () {\n    root.romaji = previousRomaji;\n    return this;\n  };\n\n  //main functions\n\n  romaji.toHiragana = function (romaji) {\n    var result = romaji.toLowerCase();\n\n    //replace the sokuon (doubling)\n    result = result.replace(/((?![aeiou])[a-z])\\1{1}/g, 'っ$1');\n    for (var r in toHiraganaMap) {\n      result = replaceAll(r, toHiraganaMap[r], result);\n    }\n    return result;\n  };\n  romaji.toKatakana = function (romaji) {\n    var result = romaji.toLowerCase();\n    var revlongVowelsReplacer = function (match, p1) {\n      return revLongVowelsMap[p1] + 'ー';\n    };\n    result = result.replace(/([āēīōū])/g, revlongVowelsReplacer);\n    for (var r in toKatakanaMap) {\n      result = replaceAll(r, toKatakanaMap[r], result);\n    }\n    return result;\n  };\n  romaji.fromKana = function (kana) {\n    var result = kana;\n    var longVowelsReplacer = function (match, p1) {\n      return longVowelsMap[p1];\n    };\n\n    //basic dictionary matching\n    for (var index in toKanaMap) {\n      for (var s in toKanaMap[index]) {\n        result = replaceAll(s, toKanaMap[index][s], result);\n      }\n    }\n\n    //replace long vowels\n    result = result.replace(/([aeiou])ー/g, longVowelsReplacer);\n\n    //replace the sokuon (doubling)\n    result = result.replace(/(ッ|っ)([a-z])/g, \"$2$2\");\n    return result;\n  };\n  romaji.convert = function (s) {\n    console.warn('WARNING: romaji.convert() is deprecated, please use romjia.fromKana()');\n    return romaji.fromKana(s);\n  };\n}).call(this);","map":{"version":3,"names":["root","previousRomaji","romaji","exports","version","mode","swapJsonKeyValues","input","one","output","hasOwnProperty","replaceAll","find","replace","str","RegExp","toKanaMap","hiragana","katakana","longVowelsMap","toHiraganaMap","toKatakanaMap","revLongVowelsMap","noConflict","toHiragana","result","toLowerCase","r","toKatakana","revlongVowelsReplacer","match","p1","fromKana","kana","longVowelsReplacer","index","s","convert","console","warn","call"],"sources":["/Users/rukiyeaslan/Documents/Career/Training/Harpeon-Winter Training/Backend/node_modules/romaji/romaji.js"],"sourcesContent":["\"use strict\";\r\n\r\n\r\n(function () {\r\n    var root = this;\r\n\r\n    var previousRomaji = root.romaji;\r\n\r\n    var romaji;\r\n\r\n    if (typeof exports !== 'undefined') {\r\n        romaji = exports;\r\n    } else {\r\n        romaji = root.romaji = {};\r\n    }\r\n\r\n    romaji.version = '0.2.1';\r\n    romaji.mode = 'hepburn';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //helper functions\r\n\r\n    var swapJsonKeyValues = function (input) {\r\n        var one, output = {};\r\n        for (one in input) {\r\n            if (input.hasOwnProperty(one)) {\r\n                output[input[one]] = one;\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n\r\n    var replaceAll = function (find, replace, str) {\r\n        return str.replace(new RegExp(find, 'g'), replace);\r\n    }\r\n\r\n\r\n\r\n    //maps\r\n    var toKanaMap = {};\r\n\r\n    toKanaMap.hiragana = {\r\n        //Digraphs\r\n\r\n        \"きゃ\": \"kya\",\r\n        \"しゃ\": \"sha\",\r\n        \"ちゃ\": \"cha\",\r\n        \"にゃ\": \"nya\",\r\n        \"ひゃ\": \"hya\",\r\n        \"みゃ\": \"mya\",\r\n        \"りゃ\": \"rya\",\r\n        \"ぎゃ\": \"gya\",\r\n        \"ふゅ\": \"fyu\",\r\n\r\n        \"びゃ\": \"bya\",\r\n        \"ぴゃ\": \"pya\",\r\n\r\n        \"きゅ\": \"kyu\",\r\n        \"しゅ\": \"shu\",\r\n        \"ちゅ\": \"chu\",\r\n        \"にゅ\": \"nyu\",\r\n        \"ひゅ\": \"hyu\",\r\n        \"みゅ\": \"myu\",\r\n        \"りゅ\": \"ryu\",\r\n        \"ぎゅ\": \"gyu\",\r\n\r\n        \"びゅ\": \"byu\",\r\n        \"ぴゅ\": \"pyu\",\r\n\r\n        \"きょ\": \"kyo\",\r\n        \"しょ\": \"sho\",\r\n        \"ちょ\": \"cho\",\r\n        \"にょ\": \"nyo\",\r\n        \"ひょ\": \"hyo\",\r\n        \"みょ\": \"myo\",\r\n        \"りょ\": \"ryo\",\r\n        \"ぎょ\": \"gyo\",\r\n\r\n        \"びょ\": \"byo\",\r\n        \"ぴょ\": \"pyo\",\r\n\r\n\r\n\r\n        \"つぁ\": \"tsa\",\r\n        \"つぃ\": \"tsi\",\r\n        \"つぇ\": \"tse\",\r\n        \"つぉ\": \"tso\",\r\n\r\n        \"ちぇ\": \"che\",\r\n        \"しぇ\": \"she\",\r\n\r\n\r\n        \"じゃ\": \"ja\",\r\n        \"じゅ\": \"ju\",\r\n        \"じょ\": \"jo\",\r\n\r\n        \"ふぁ\": \"fa\",\r\n        \"ふぃ\": \"fi\",\r\n        \"ふぇ\": \"fe\",\r\n        \"ふぉ\": \"fo\",\r\n\r\n\r\n        \"うぃ\": \"wi\",\r\n\r\n\r\n        // obsoleted kana\r\n        \"ゑ\": \"we\",\r\n\r\n        \"うぇ\": \"we\",\r\n\r\n        \"うぉ\": \"wo\",\r\n\r\n        \"ゔぁ\": \"va\",\r\n        \"ゔぃ\": \"vi\",\r\n        \"ゔぇ\": \"ve\",\r\n        \"ゔぉ\": \"vo\",\r\n\r\n        \"じぇ\": \"je\",\r\n        \"てぃ\": \"ti\",\r\n        \"でぃ\": \"di\",\r\n        \"でゅ\": \"du\",\r\n        \"とぅ\": \"tu\",\r\n\r\n        //Monographs\r\n\r\n        \"し\": \"shi\",\r\n        \"ち\": \"chi\",\r\n        \"つ\": \"tsu\",\r\n\r\n\r\n        \"か\": \"ka\",\r\n        \"さ\": \"sa\",\r\n        \"た\": \"ta\",\r\n        \"な\": \"na\",\r\n        \"は\": \"ha\",\r\n        \"ま\": \"ma\",\r\n        \"ら\": \"ra\",\r\n\r\n        \"き\": \"ki\",\r\n\r\n        \"に\": \"ni\",\r\n        \"ひ\": \"hi\",\r\n        \"み\": \"mi\",\r\n        \"り\": \"ri\",\r\n\r\n        \"く\": \"ku\",\r\n\r\n        \"す\": \"su\",\r\n\r\n        \"ぬ\": \"nu\",\r\n        \"ふ\": \"fu\",\r\n        \"む\": \"mu\",\r\n        \"る\": \"ru\",\r\n\r\n        \"け\": \"ke\",\r\n        \"せ\": \"se\",\r\n        \"て\": \"te\",\r\n        \"ね\": \"ne\",\r\n        \"へ\": \"he\",\r\n        \"め\": \"me\",\r\n        \"れ\": \"re\",\r\n\r\n        \"こ\": \"ko\",\r\n        \"そ\": \"so\",\r\n        \"と\": \"to\",\r\n        \"の\": \"no\",\r\n        \"ほ\": \"ho\",\r\n        \"も\": \"mo\",\r\n        \"ろ\": \"ro\",\r\n\r\n        \"わ\": \"wa\",\r\n        \"を\": \"wo\",\r\n\r\n\r\n\r\n        \"が\": \"ga\",\r\n        \"ざ\": \"za\",\r\n        \"だ\": \"da\",\r\n        \"ば\": \"ba\",\r\n        \"ぱ\": \"pa\",\r\n\r\n        \"ぎ\": \"gi\",\r\n\r\n\r\n        \"ぢ\": \"ji\",\r\n        //じ is more common to use, so it goes secondly\r\n        // when we build toHiraganaMap, this will get overwriiten by second one\r\n\r\n        \"じ\": \"ji\",\r\n\r\n\r\n\r\n        \"び\": \"bi\",\r\n        \"ぴ\": \"pi\",\r\n\r\n        \"ぐ\": \"gu\",\r\n        \"ず\": \"zu\",\r\n        \"づ\": \"zu\",\r\n        \"ぶ\": \"bu\",\r\n        \"ぷ\": \"pu\",\r\n\r\n        \"げ\": \"ge\",\r\n        \"ぜ\": \"ze\",\r\n        \"で\": \"de\",\r\n        \"べ\": \"be\",\r\n        \"ぺ\": \"pe\",\r\n\r\n        \"ご\": \"go\",\r\n        \"ぞ\": \"zo\",\r\n        \"ど\": \"do\",\r\n        \"ぼ\": \"bo\",\r\n        \"ぽ\": \"po\",\r\n\r\n        \"や\": \"ya\",\r\n        \"ゆ\": \"yu\",\r\n        \"よ\": \"yo\",\r\n\r\n\r\n\r\n\r\n\r\n        \"あ\": \"a\",\r\n        \"い\": \"i\",\r\n        \"う\": \"u\",\r\n        \"え\": \"e\",\r\n        \"お\": \"o\",\r\n        \"ん\": \"n\"\r\n\r\n\r\n    }\r\n\r\n    toKanaMap.katakana = {\r\n        \"キャ\": \"kya\",\r\n        \"シャ\": \"sha\",\r\n        \"チャ\": \"cha\",\r\n        \"ニャ\": \"nya\",\r\n        \"ヒャ\": \"hya\",\r\n        \"ミャ\": \"mya\",\r\n        \"リャ\": \"rya\",\r\n        \"ギャ\": \"gya\",\r\n\r\n        \"ビャ\": \"bya\",\r\n        \"ピャ\": \"pya\",\r\n\r\n        \"キュ\": \"kyu\",\r\n        \"シュ\": \"shu\",\r\n        \"チュ\": \"chu\",\r\n        \"ニュ\": \"nyu\",\r\n        \"ヒュ\": \"hyu\",\r\n        \"ミュ\": \"myu\",\r\n        \"リュ\": \"ryu\",\r\n        \"ギュ\": \"gyu\",\r\n\r\n        \"ビュ\": \"byu\",\r\n        \"ピュ\": \"pyu\",\r\n\r\n        \"キョ\": \"kyo\",\r\n        \"ショ\": \"sho\",\r\n        \"チョ\": \"cho\",\r\n        \"ニョ\": \"nyo\",\r\n        \"ヒョ\": \"hyo\",\r\n        \"ミョ\": \"myo\",\r\n        \"リョ\": \"ryo\",\r\n        \"ギョ\": \"gyo\",\r\n\r\n        \"ビョ\": \"byo\",\r\n        \"ピョ\": \"pyo\",\r\n\r\n\t\t\"フュ\": \"fyu\",\r\n\r\n\t\t\"ツァ\": \"tsa\",\r\n\t\t\"ツィ\": \"tsi\",\r\n\t\t\"ツェ\": \"tse\",\r\n\t\t\"ツォ\": \"tso\",\r\n\r\n\t\t\"チェ\": \"che\",\r\n\t\t\"シェ\": \"she\",\r\n\r\n\t\t\"シ\": \"shi\",\r\n\t\t\"チ\": \"chi\",\r\n\t\t\"ツ\": \"tsu\",\r\n\r\n\t\t\"ジョ\": \"jo\",\r\n\t\t\"ジャ\": \"ja\",\r\n\t\t\"ジュ\": \"ju\",\r\n\r\n        \"ファ\": \"fa\",\r\n        \"フィ\": \"fi\",\r\n        \"フェ\": \"fe\",\r\n        \"フォ\": \"fo\",\r\n\r\n\r\n        \"ウィ\": \"wi\",\r\n        \"ウェ\": \"we\",\r\n        \"ウォ\": \"wo\",\r\n\r\n\r\n\r\n        \"ヴァ\": \"va\",\r\n        \"ヴィ\": \"vi\",\r\n        \"ヴェ\": \"ve\",\r\n        \"ヴォ\": \"vo\",\r\n\r\n\r\n\r\n        \"ジェ\": \"je\",\r\n        \"ティ\": \"ti\",\r\n        \"ディ\": \"di\",\r\n        \"デュ\": \"du\",\r\n        \"トゥ\": \"tu\",\r\n\r\n\r\n        //basic\r\n\r\n\r\n        \"カ\": \"ka\",\r\n        \"サ\": \"sa\",\r\n        \"タ\": \"ta\",\r\n        \"ナ\": \"na\",\r\n        \"ハ\": \"ha\",\r\n        \"マ\": \"ma\",\r\n        \"ラ\": \"ra\",\r\n\r\n\r\n        \"キ\": \"ki\",\r\n\r\n        \"ニ\": \"ni\",\r\n        \"ヒ\": \"hi\",\r\n        \"ミ\": \"mi\",\r\n        \"リ\": \"ri\",\r\n\r\n\r\n        \"ク\": \"ku\",\r\n        \"ス\": \"su\",\r\n\r\n        \"ヌ\": \"nu\",\r\n        \"フ\": \"fu\",\r\n        \"ム\": \"mu\",\r\n        \"ル\": \"ru\",\r\n\r\n\r\n        \"ケ\": \"ke\",\r\n        \"セ\": \"se\",\r\n        \"テ\": \"te\",\r\n        \"ネ\": \"ne\",\r\n        \"ヘ\": \"he\",\r\n        \"メ\": \"me\",\r\n        \"レ\": \"re\",\r\n\r\n\r\n        \"コ\": \"ko\",\r\n        \"ソ\": \"so\",\r\n        \"ト\": \"to\",\r\n        \"ノ\": \"no\",\r\n        \"ホ\": \"ho\",\r\n        \"モ\": \"mo\",\r\n        \"ロ\": \"ro\",\r\n\r\n        \"ワ\": \"wa\",\r\n        \"ヲ\": \"wo\",\r\n\r\n\r\n        \"ガ\": \"ga\",\r\n        \"ザ\": \"za\",\r\n        \"ダ\": \"da\",\r\n        \"バ\": \"ba\",\r\n        \"パ\": \"pa\",\r\n\r\n        \"ギ\": \"gi\",\r\n        \"ジ\": \"ji\",\r\n        \"ヂ\": \"ji\",\r\n        \"ビ\": \"bi\",\r\n        \"ピ\": \"pi\",\r\n\r\n        \"グ\": \"gu\",\r\n        \"ズ\": \"zu\",\r\n        \"ヅ\": \"zu\",\r\n        \"ブ\": \"bu\",\r\n        \"プ\": \"pu\",\r\n\r\n        \"ゲ\": \"ge\",\r\n        \"ぜ\": \"ze\",\r\n        \"デ\": \"de\",\r\n        \"ベ\": \"be\",\r\n        \"ペ\": \"pe\",\r\n\r\n        \"ゴ\": \"go\",\r\n        \"ゾ\": \"zo\",\r\n        \"ド\": \"do\",\r\n        \"ボ\": \"bo\",\r\n        \"ポ\": \"po\",\r\n\r\n        \"ャ\": \"ya\", \"ヤ\": \"ya\",\r\n        \"ュ\": \"yu\", \"ユ\": \"yu\",\r\n        \"ョ\": \"yo\", \"ヨ\": \"yo\",\r\n\r\n\r\n\r\n\r\n\t\t\"ン\": \"n\",\r\n\t\t\"ア\": \"a\",\r\n\t\t\"イ\": \"i\",\r\n\t\t\"ウ\": \"u\",\r\n\t\t\"エ\": \"e\",\r\n\t\t\"オ\": \"o\",\r\n\r\n\t\t// obsoleted kana\r\n\r\n\r\n\t\t\"ヱ\": \"we\",\r\n\t\t\"ヹ\": \"ve\"\r\n\r\n\r\n\t}\r\n\r\n\r\n    var longVowelsMap = {\r\n        'a': 'ā',\r\n        'e': 'ē',\r\n        'i': 'ī',\r\n        'o': 'ō',\r\n        'u': 'ū'\r\n    }\r\n\r\n\r\n    //rebuild map by switching key and value\r\n    var toHiraganaMap = swapJsonKeyValues(toKanaMap.hiragana);\r\n    var toKatakanaMap = swapJsonKeyValues(toKanaMap.katakana);\r\n\tvar revLongVowelsMap =  swapJsonKeyValues(longVowelsMap);\r\n\r\n\r\n\r\n\r\n\r\n    romaji.noConflict = function () {\r\n        root.romaji = previousRomaji;\r\n        return this;\r\n    }\r\n\r\n\r\n    //main functions\r\n\r\n\r\n    romaji.toHiragana = function (romaji) {\r\n        var result = romaji.toLowerCase();\r\n\r\n\r\n        //replace the sokuon (doubling)\r\n        result = result.replace(/((?![aeiou])[a-z])\\1{1}/g,'っ$1')\r\n\r\n        for (var r in toHiraganaMap) {\r\n            result = replaceAll(r, toHiraganaMap[r], result);\r\n        }\r\n\r\n\r\n\r\n        return result;\r\n\r\n\r\n    };\r\n\r\n    romaji.toKatakana = function (romaji) {\r\n        var result = romaji.toLowerCase();\r\n\r\n\t\tvar revlongVowelsReplacer = function(match,p1){\r\n\t\t\treturn revLongVowelsMap[p1]+'ー';\r\n\t\t}\r\n\r\n\r\n\t\tresult = result.replace(/([āēīōū])/g, revlongVowelsReplacer);\r\n\r\n\r\n\t\tfor (var r in toKatakanaMap) {\r\n\t\t\tresult = replaceAll(r, toKatakanaMap[r], result);\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn result;\r\n\r\n    };\r\n\r\n    romaji.fromKana = function (kana) {\r\n\r\n        var result = kana;\r\n\r\n        var longVowelsReplacer = function (match, p1) {\r\n            return longVowelsMap[p1];\r\n        }\r\n\r\n        //basic dictionary matching\r\n        for (var index in toKanaMap) {\r\n            for (var s in toKanaMap[index]) {\r\n                result = replaceAll(s, toKanaMap[index][s], result);\r\n            }\r\n        }\r\n\r\n        //replace long vowels\r\n        result = result.replace(/([aeiou])ー/g, longVowelsReplacer);\r\n\r\n        //replace the sokuon (doubling)\r\n        result = result.replace(/(ッ|っ)([a-z])/g, \"$2$2\");\r\n\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    romaji.convert = function (s) {\r\n        console.warn('WARNING: romaji.convert() is deprecated, please use romjia.fromKana()');\r\n        return romaji.fromKana(s);\r\n    }\r\n\r\n\r\n\r\n}).call(this);\r\n\r\n"],"mappings":"AAAA,YAAY;;AAGZ,CAAC,YAAY;EACT,IAAIA,IAAI,GAAG,IAAI;EAEf,IAAIC,cAAc,GAAGD,IAAI,CAACE,MAAM;EAEhC,IAAIA,MAAM;EAEV,IAAI,OAAOC,OAAO,KAAK,WAAW,EAAE;IAChCD,MAAM,GAAGC,OAAO;EACpB,CAAC,MAAM;IACHD,MAAM,GAAGF,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC;EAC7B;EAEAA,MAAM,CAACE,OAAO,GAAG,OAAO;EACxBF,MAAM,CAACG,IAAI,GAAG,SAAS;;EASvB;;EAEA,IAAIC,iBAAiB,GAAG,SAAAA,CAAUC,KAAK,EAAE;IACrC,IAAIC,GAAG;MAAEC,MAAM,GAAG,CAAC,CAAC;IACpB,KAAKD,GAAG,IAAID,KAAK,EAAE;MACf,IAAIA,KAAK,CAACG,cAAc,CAACF,GAAG,CAAC,EAAE;QAC3BC,MAAM,CAACF,KAAK,CAACC,GAAG,CAAC,CAAC,GAAGA,GAAG;MAC5B;IACJ;IACA,OAAOC,MAAM;EACjB,CAAC;EAGD,IAAIE,UAAU,GAAG,SAAAA,CAAUC,IAAI,EAAEC,OAAO,EAAEC,GAAG,EAAE;IAC3C,OAAOA,GAAG,CAACD,OAAO,CAAC,IAAIE,MAAM,CAACH,IAAI,EAAE,GAAG,CAAC,EAAEC,OAAO,CAAC;EACtD,CAAC;;EAID;EACA,IAAIG,SAAS,GAAG,CAAC,CAAC;EAElBA,SAAS,CAACC,QAAQ,GAAG;IACjB;;IAEA,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAEX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAEX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAEX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAEX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAEX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAIX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAEX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAGX,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IAEV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IAGV,IAAI,EAAE,IAAI;IAGV;IACA,GAAG,EAAE,IAAI;IAET,IAAI,EAAE,IAAI;IAEV,IAAI,EAAE,IAAI;IAEV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IAEV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IAEV;;IAEA,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,KAAK;IAGV,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAIT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IAGT,GAAG,EAAE,IAAI;IACT;IACA;;IAEA,GAAG,EAAE,IAAI;IAIT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAMT,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE;EAGT,CAAC;EAEDD,SAAS,CAACE,QAAQ,GAAG;IACjjB,IAAI,EAAE,KAAK;IAEX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAEX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IAEX,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,KAAK;IAEV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IAEJ,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IAGV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IAIV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IAIV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IAGV;;IAGA,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAGT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAGT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAGT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAGT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAGT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IAET,GAAG,EAAE,IAAI;IAAE,GAAG,EAAE,IAAI;IACpB,GAAG,EAAE,IAAI;IAAE,GAAG,EAAE,IAAI;IACpB,GAAG,EAAE,IAAI;IAAE,GAAG,EAAE,IAAI;IAK1B,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IAER;;IAGA,GAAG,EAAE,IAAI;IACT,GAAG,EAAE;EAGN,CAAC;EAGE,IAAIC,aAAa,GAAG;IAChB,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE;EACT,CAAC;;EAGD;EACA,IAAIC,aAAa,GAAGd,iBAAiB,CAACU,SAAS,CAACC,QAAQ,CAAC;EACzD,IAAII,aAAa,GAAGf,iBAAiB,CAACU,SAAS,CAACE,QAAQ,CAAC;EAC5D,IAAII,gBAAgB,GAAIhB,iBAAiB,CAACa,aAAa,CAAC;EAMrDjB,MAAM,CAACqB,UAAU,GAAG,YAAY;IAC5BvB,IAAI,CAACE,MAAM,GAAGD,cAAc;IAC5B,OAAO,IAAI;EACf,CAAC;;EAGD;;EAGAC,MAAM,CAACsB,UAAU,GAAG,UAAUtB,MAAM,EAAE;IAClC,IAAIuB,MAAM,GAAGvB,MAAM,CAACwB,WAAW,EAAE;;IAGjC;IACAD,MAAM,GAAGA,MAAM,CAACZ,OAAO,CAAC,0BAA0B,EAAC,KAAK,CAAC;IAEzD,KAAK,IAAIc,CAAC,IAAIP,aAAa,EAAE;MACzBK,MAAM,GAAGd,UAAU,CAACgB,CAAC,EAAEP,aAAa,CAACO,CAAC,CAAC,EAAEF,MAAM,CAAC;IACpD;IAIA,OAAOA,MAAM;EAGjB,CAAC;EAEDvB,MAAM,CAAC0B,UAAU,GAAG,UAAU1B,MAAM,EAAE;IAClC,IAAIuB,MAAM,GAAGvB,MAAM,CAACwB,WAAW,EAAE;IAEvC,IAAIG,qBAAqB,GAAG,SAAAA,CAASC,KAAK,EAACC,EAAE,EAAC;MAC7C,OAAOT,gBAAgB,CAACS,EAAE,CAAC,GAAC,GAAG;IAChC,CAAC;IAGDN,MAAM,GAAGA,MAAM,CAACZ,OAAO,CAAC,YAAY,EAAEgB,qBAAqB,CAAC;IAG5D,KAAK,IAAIF,CAAC,IAAIN,aAAa,EAAE;MAC5BI,MAAM,GAAGd,UAAU,CAACgB,CAAC,EAAEN,aAAa,CAACM,CAAC,CAAC,EAAEF,MAAM,CAAC;IACjD;IAIA,OAAOA,MAAM;EAEX,CAAC;EAEDvB,MAAM,CAAC8B,QAAQ,GAAG,UAAUC,IAAI,EAAE;IAE9B,IAAIR,MAAM,GAAGQ,IAAI;IAEjB,IAAIC,kBAAkB,GAAG,SAAAA,CAAUJ,KAAK,EAAEC,EAAE,EAAE;MAC1C,OAAOZ,aAAa,CAACY,EAAE,CAAC;IAC5B,CAAC;;IAED;IACA,KAAK,IAAII,KAAK,IAAInB,SAAS,EAAE;MACzB,KAAK,IAAIoB,CAAC,IAAIpB,SAAS,CAACmB,KAAK,CAAC,EAAE;QAC5BV,MAAM,GAAGd,UAAU,CAACyB,CAAC,EAAEpB,SAAS,CAACmB,KAAK,CAAC,CAACC,CAAC,CAAC,EAAEX,MAAM,CAAC;MACvD;IACJ;;IAEA;IACAA,MAAM,GAAGA,MAAM,CAACZ,OAAO,CAAC,aAAa,EAAEqB,kBAAkB,CAAC;;IAE1D;IACAT,MAAM,GAAGA,MAAM,CAACZ,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC;IAGhD,OAAOY,MAAM;EAEjB,CAAC;EAEDvB,MAAM,CAACmC,OAAO,GAAG,UAAUD,CAAC,EAAE;IAC1BE,OAAO,CAACC,IAAI,CAAC,uEAAuE,CAAC;IACrF,OAAOrC,MAAM,CAAC8B,QAAQ,CAACI,CAAC,CAAC;EAC7B,CAAC;AAIL,CAAC,EAAEI,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}